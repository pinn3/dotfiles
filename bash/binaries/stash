#!/usr/bin/env bash
#
# Bash stash, kinda like git stash everywhere
#

STASH_DIR=${HOME}/.bash_stash
if [ ! -d "$STASH_DIR" ]; then 
    mkdir $STASH_DIR
fi

_print_help() {
    echo "stash [-nfldh] args"
}

_stash() {
    if [ ${#FILES[@]} -eq 0 ]; then 
        echo "No files were supplied."
        echo "Use -f to pass them in."
        _print_help
        exit 1
    else
        TMP_DIR=$(mktemp -d -t "${STASH_NAME-stash}")

        echo "$(pwd)" >> $TMP_DIR/.stash_origin &&
        for file in $FILES; do
            mv $file $TMP_DIR/$file
        done

        mv $TMP_DIR $STASH_DIR/ &&
        echo "${STASH_DIR}/${TMP_DIR##*/}"
        exit 0
    fi
}

_pop() {
    STASH_ORIGIN=$(cat $STASH_DIR/$STASH_ID/.stash_origin)
    rm $STASH_DIR/$STASH_ID/.stash_origin &&
    mv $STASH_DIR/$STASH_ID/* $STASH_ORIGIN/ &&
    rmdir $STASH_DIR/$STASH_ID &&
    exit 0
}

while getopts ":n:f:lp:dh" opt; do
    case $opt in
        n)
            STASH_NAME=$OPTARG
            _stash
            ;;
        f)
            FILES=$OPTARG
            echo $FILES
            _stash
            ;;
        l)
            ls -A1 $STASH_DIR
            exit 0
            ;;
        p)
            STASH_ID=$OPTARG
            _pop
            ;;
        d)
            read -p "Drop all stashes? [y/n] " choice
            case "$choice" in 
                y|Y )rm -rf $STASH_DIR;;
            esac
            exit 0
            ;;
        h)
            _print_help
            exit 0
            ;;
        :)
            echo "Option -$OPTARG requires an argument."
            _print_help
            exit 1
            ;;
        \?)
            echo "Invalid option: -$OPTARG"
            _print_help
            exit 1
            ;;
    esac
done

_print_help
